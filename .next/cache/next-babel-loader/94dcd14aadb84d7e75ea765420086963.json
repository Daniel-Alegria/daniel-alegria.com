{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Ryan/Desktop/portfolio/pages/portfolio.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport Project from \"../components/Project\";\nconsole.log(process.env.SPACE_ID);\nconsole.log(process.env.ACCESS_TOKEN); // create a Contentful client to provide access to helper methods for retreiving data from Contentful\n\nconst client = require(\"contentful\").createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n}); // this function retreives and displays our content from Contentful\n\n\nfunction Portfolio() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes();\n    if (types.items) return types.items;\n    console.log(\"Error getting Content Types.\");\n  }\n\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  const [projects, setProjects] = useState([]); // use above async functions to retreive content on initial load\n\n  useEffect(() => {\n    async function getProjects() {\n      const contentTypes = await fetchContentTypes();\n      const allProjects = await fetchEntriesForContentType(contentTypes[0]);\n      setProjects([...allProjects]);\n    }\n\n    getProjects();\n  }, []);\n  console.log(projects.map(p => p.fields)); // when content is retreived, the fields are mapped over to be displayed by our component\n\n  return React.createElement(React.Fragment, null, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Daniel Alegria | Web Developer\"), React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), projects.length > 0 ? projects.map(p => React.createElement(Project, {\n    title: p.fields.title,\n    date: p.fields.date // image has fields of it's own\n    ,\n    image: p.fields.image.fields.file.url,\n    excerpt: p.fields.excerpt,\n    url: p.fields.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })) : null);\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["/mnt/c/Users/Ryan/Desktop/portfolio/pages/portfolio.js"],"names":["useEffect","useState","Head","Project","console","log","process","env","SPACE_ID","ACCESS_TOKEN","client","require","createClient","space","accessToken","Portfolio","fetchContentTypes","types","getContentTypes","items","fetchEntriesForContentType","contentType","entries","getEntries","content_type","sys","id","name","projects","setProjects","getProjects","contentTypes","allProjects","map","p","fields","length","title","date","image","file","url","excerpt"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAxB;AACAJ,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYE,YAAxB,E,CAEA;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAEP,OAAO,CAACC,GAAR,CAAYC,QAD6B;AAEhDM,EAAAA,WAAW,EAAER,OAAO,CAACC,GAAR,CAAYE;AAFuB,CAAnC,CAAf,C,CAKA;;;AACA,SAASM,SAAT,GAAqB;AACnB,iBAAeC,iBAAf,GAAmC;AACjC,UAAMC,KAAK,GAAG,MAAMP,MAAM,CAACQ,eAAP,EAApB;AACA,QAAID,KAAK,CAACE,KAAV,EAAiB,OAAOF,KAAK,CAACE,KAAb;AACjBf,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;;AACD,iBAAee,0BAAf,CAA0CC,WAA1C,EAAuD;AACrD,UAAMC,OAAO,GAAG,MAAMZ,MAAM,CAACa,UAAP,CAAkB;AACtCC,MAAAA,YAAY,EAAEH,WAAW,CAACI,GAAZ,CAAgBC;AADQ,KAAlB,CAAtB;AAGA,QAAIJ,OAAO,CAACH,KAAZ,EAAmB,OAAOG,OAAO,CAACH,KAAf;AACnBf,IAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BgB,WAAW,CAACM,IAAK,GAA1D;AACD;;AACD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC,CAbmB,CAcnB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe8B,WAAf,GAA6B;AAC3B,YAAMC,YAAY,GAAG,MAAMf,iBAAiB,EAA5C;AACA,YAAMgB,WAAW,GAAG,MAAMZ,0BAA0B,CAACW,YAAY,CAAC,CAAD,CAAb,CAApD;AACAF,MAAAA,WAAW,CAAC,CAAC,GAAGG,WAAJ,CAAD,CAAX;AACD;;AACDF,IAAAA,WAAW;AACZ,GAPQ,EAON,EAPM,CAAT;AAQA1B,EAAAA,OAAO,CAACC,GAAR,CAAYuB,QAAQ,CAACK,GAAT,CAAaC,CAAC,IAAIA,CAAC,CAACC,MAApB,CAAZ,EAvBmB,CAwBnB;;AACA,SACE,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,4BAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASGP,QAAQ,CAACQ,MAAT,GAAkB,CAAlB,GACGR,QAAQ,CAACK,GAAT,CAAaC,CAAC,IACd,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEA,CAAC,CAACC,MAAF,CAASE,KADlB;AAEE,IAAA,IAAI,EAAEH,CAAC,CAACC,MAAF,CAASG,IAFjB,CAGE;AAHF;AAIE,IAAA,KAAK,EAAEJ,CAAC,CAACC,MAAF,CAASI,KAAT,CAAeJ,MAAf,CAAsBK,IAAtB,CAA2BC,GAJpC;AAKE,IAAA,OAAO,EAAEP,CAAC,CAACC,MAAF,CAASO,OALpB;AAME,IAAA,GAAG,EAAER,CAAC,CAACC,MAAF,CAASM,GANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADH,GAWG,IApBN,CADF;AAwBD;;AAED,eAAe1B,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport Project from \"../components/Project\";\n\nconsole.log(process.env.SPACE_ID);\nconsole.log(process.env.ACCESS_TOKEN);\n\n// create a Contentful client to provide access to helper methods for retreiving data from Contentful\nconst client = require(\"contentful\").createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\n// this function retreives and displays our content from Contentful\nfunction Portfolio() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes();\n    if (types.items) return types.items;\n    console.log(\"Error getting Content Types.\");\n  }\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n  const [projects, setProjects] = useState([]);\n  // use above async functions to retreive content on initial load\n  useEffect(() => {\n    async function getProjects() {\n      const contentTypes = await fetchContentTypes();\n      const allProjects = await fetchEntriesForContentType(contentTypes[0]);\n      setProjects([...allProjects]);\n    }\n    getProjects();\n  }, []);\n  console.log(projects.map(p => p.fields));\n  // when content is retreived, the fields are mapped over to be displayed by our component\n  return (\n    <>\n      <Head>\n        <title>Daniel Alegria | Web Developer</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://css.zeit.sh/v1.css\"\n          type=\"text/css\"\n        />\n      </Head>\n      {projects.length > 0\n        ? projects.map(p => (\n          <Project\n            title={p.fields.title}\n            date={p.fields.date}\n            // image has fields of it's own\n            image={p.fields.image.fields.file.url}\n            excerpt={p.fields.excerpt}\n            url={p.fields.url}\n          />\n        ))\n        : null}\n    </>\n  );\n}\n\nexport default Portfolio;\n"]},"metadata":{},"sourceType":"module"}